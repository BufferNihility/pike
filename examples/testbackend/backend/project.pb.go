// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package backend

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Animal struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	PhotoUrl             string   `protobuf:"bytes,4,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Animal) Reset()         { *m = Animal{} }
func (m *Animal) String() string { return proto.CompactTextString(m) }
func (*Animal) ProtoMessage()    {}
func (*Animal) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{0}
}

func (m *Animal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Animal.Unmarshal(m, b)
}
func (m *Animal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Animal.Marshal(b, m, deterministic)
}
func (m *Animal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Animal.Merge(m, src)
}
func (m *Animal) XXX_Size() int {
	return xxx_messageInfo_Animal.Size(m)
}
func (m *Animal) XXX_DiscardUnknown() {
	xxx_messageInfo_Animal.DiscardUnknown(m)
}

var xxx_messageInfo_Animal proto.InternalMessageInfo

func (m *Animal) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Animal) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Animal) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Animal) GetPhotoUrl() string {
	if m != nil {
		return m.PhotoUrl
	}
	return ""
}

type CreateAnimalRequest struct {
	Animal               *Animal  `protobuf:"bytes,1,opt,name=animal,proto3" json:"animal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAnimalRequest) Reset()         { *m = CreateAnimalRequest{} }
func (m *CreateAnimalRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAnimalRequest) ProtoMessage()    {}
func (*CreateAnimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{1}
}

func (m *CreateAnimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAnimalRequest.Unmarshal(m, b)
}
func (m *CreateAnimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAnimalRequest.Marshal(b, m, deterministic)
}
func (m *CreateAnimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAnimalRequest.Merge(m, src)
}
func (m *CreateAnimalRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAnimalRequest.Size(m)
}
func (m *CreateAnimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAnimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAnimalRequest proto.InternalMessageInfo

func (m *CreateAnimalRequest) GetAnimal() *Animal {
	if m != nil {
		return m.Animal
	}
	return nil
}

type CreateAnimalResponse struct {
	Created              *Animal  `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAnimalResponse) Reset()         { *m = CreateAnimalResponse{} }
func (m *CreateAnimalResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAnimalResponse) ProtoMessage()    {}
func (*CreateAnimalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{2}
}

func (m *CreateAnimalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAnimalResponse.Unmarshal(m, b)
}
func (m *CreateAnimalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAnimalResponse.Marshal(b, m, deterministic)
}
func (m *CreateAnimalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAnimalResponse.Merge(m, src)
}
func (m *CreateAnimalResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAnimalResponse.Size(m)
}
func (m *CreateAnimalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAnimalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAnimalResponse proto.InternalMessageInfo

func (m *CreateAnimalResponse) GetCreated() *Animal {
	if m != nil {
		return m.Created
	}
	return nil
}

type GetAnimalRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnimalRequest) Reset()         { *m = GetAnimalRequest{} }
func (m *GetAnimalRequest) String() string { return proto.CompactTextString(m) }
func (*GetAnimalRequest) ProtoMessage()    {}
func (*GetAnimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{3}
}

func (m *GetAnimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnimalRequest.Unmarshal(m, b)
}
func (m *GetAnimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnimalRequest.Marshal(b, m, deterministic)
}
func (m *GetAnimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnimalRequest.Merge(m, src)
}
func (m *GetAnimalRequest) XXX_Size() int {
	return xxx_messageInfo_GetAnimalRequest.Size(m)
}
func (m *GetAnimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnimalRequest proto.InternalMessageInfo

func (m *GetAnimalRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAnimalResponse struct {
	Animal               *Animal  `protobuf:"bytes,1,opt,name=animal,proto3" json:"animal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnimalResponse) Reset()         { *m = GetAnimalResponse{} }
func (m *GetAnimalResponse) String() string { return proto.CompactTextString(m) }
func (*GetAnimalResponse) ProtoMessage()    {}
func (*GetAnimalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{4}
}

func (m *GetAnimalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnimalResponse.Unmarshal(m, b)
}
func (m *GetAnimalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnimalResponse.Marshal(b, m, deterministic)
}
func (m *GetAnimalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnimalResponse.Merge(m, src)
}
func (m *GetAnimalResponse) XXX_Size() int {
	return xxx_messageInfo_GetAnimalResponse.Size(m)
}
func (m *GetAnimalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnimalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnimalResponse proto.InternalMessageInfo

func (m *GetAnimalResponse) GetAnimal() *Animal {
	if m != nil {
		return m.Animal
	}
	return nil
}

type UpdateAnimalRequest struct {
	Updated              *Animal  `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAnimalRequest) Reset()         { *m = UpdateAnimalRequest{} }
func (m *UpdateAnimalRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAnimalRequest) ProtoMessage()    {}
func (*UpdateAnimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{5}
}

func (m *UpdateAnimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAnimalRequest.Unmarshal(m, b)
}
func (m *UpdateAnimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAnimalRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAnimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAnimalRequest.Merge(m, src)
}
func (m *UpdateAnimalRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAnimalRequest.Size(m)
}
func (m *UpdateAnimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAnimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAnimalRequest proto.InternalMessageInfo

func (m *UpdateAnimalRequest) GetUpdated() *Animal {
	if m != nil {
		return m.Updated
	}
	return nil
}

type UpdateAnimalResponse struct {
	Result               *Animal  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAnimalResponse) Reset()         { *m = UpdateAnimalResponse{} }
func (m *UpdateAnimalResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAnimalResponse) ProtoMessage()    {}
func (*UpdateAnimalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{6}
}

func (m *UpdateAnimalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAnimalResponse.Unmarshal(m, b)
}
func (m *UpdateAnimalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAnimalResponse.Marshal(b, m, deterministic)
}
func (m *UpdateAnimalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAnimalResponse.Merge(m, src)
}
func (m *UpdateAnimalResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAnimalResponse.Size(m)
}
func (m *UpdateAnimalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAnimalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAnimalResponse proto.InternalMessageInfo

func (m *UpdateAnimalResponse) GetResult() *Animal {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteAnimalRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAnimalRequest) Reset()         { *m = DeleteAnimalRequest{} }
func (m *DeleteAnimalRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAnimalRequest) ProtoMessage()    {}
func (*DeleteAnimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{7}
}

func (m *DeleteAnimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAnimalRequest.Unmarshal(m, b)
}
func (m *DeleteAnimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAnimalRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAnimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAnimalRequest.Merge(m, src)
}
func (m *DeleteAnimalRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAnimalRequest.Size(m)
}
func (m *DeleteAnimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAnimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAnimalRequest proto.InternalMessageInfo

func (m *DeleteAnimalRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteAnimalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAnimalResponse) Reset()         { *m = DeleteAnimalResponse{} }
func (m *DeleteAnimalResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAnimalResponse) ProtoMessage()    {}
func (*DeleteAnimalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{8}
}

func (m *DeleteAnimalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAnimalResponse.Unmarshal(m, b)
}
func (m *DeleteAnimalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAnimalResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAnimalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAnimalResponse.Merge(m, src)
}
func (m *DeleteAnimalResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAnimalResponse.Size(m)
}
func (m *DeleteAnimalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAnimalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAnimalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Animal)(nil), "backend.Animal")
	proto.RegisterType((*CreateAnimalRequest)(nil), "backend.CreateAnimalRequest")
	proto.RegisterType((*CreateAnimalResponse)(nil), "backend.CreateAnimalResponse")
	proto.RegisterType((*GetAnimalRequest)(nil), "backend.GetAnimalRequest")
	proto.RegisterType((*GetAnimalResponse)(nil), "backend.GetAnimalResponse")
	proto.RegisterType((*UpdateAnimalRequest)(nil), "backend.UpdateAnimalRequest")
	proto.RegisterType((*UpdateAnimalResponse)(nil), "backend.UpdateAnimalResponse")
	proto.RegisterType((*DeleteAnimalRequest)(nil), "backend.DeleteAnimalRequest")
	proto.RegisterType((*DeleteAnimalResponse)(nil), "backend.DeleteAnimalResponse")
}

func init() { proto.RegisterFile("project.proto", fileDescriptor_8340e6318dfdfac2) }

var fileDescriptor_8340e6318dfdfac2 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x4e, 0xc2, 0x40,
	0x14, 0x4c, 0x0b, 0x52, 0xfb, 0x00, 0xc5, 0x85, 0x98, 0x8a, 0x9a, 0x90, 0x4d, 0x8c, 0x70, 0xe9,
	0x01, 0x8f, 0x1a, 0x15, 0x34, 0xf1, 0xc0, 0xad, 0x09, 0x17, 0x3d, 0x98, 0x42, 0x5f, 0x14, 0x2d,
	0x6d, 0xdd, 0x6e, 0xff, 0xcc, 0x0f, 0x34, 0x6e, 0xd7, 0xba, 0xad, 0xdb, 0xc4, 0xdb, 0xe6, 0xcd,
	0x74, 0x66, 0xde, 0xbc, 0x14, 0xba, 0x09, 0x8b, 0xdf, 0x70, 0xcd, 0xdd, 0x84, 0xc5, 0x3c, 0x26,
	0xd6, 0xca, 0x5f, 0xbf, 0x63, 0x14, 0xd0, 0x27, 0x68, 0xcd, 0xa2, 0xcd, 0xd6, 0x0f, 0xc9, 0x1e,
	0x98, 0x9b, 0xc0, 0x31, 0x46, 0xc6, 0xb8, 0xeb, 0x99, 0x9b, 0x80, 0x10, 0x68, 0x46, 0xfe, 0x16,
	0x1d, 0x73, 0x64, 0x8c, 0x6d, 0x4f, 0xbc, 0x49, 0x0f, 0x1a, 0xfe, 0x0b, 0x3a, 0x8d, 0x91, 0x31,
	0xde, 0xf1, 0xbe, 0x9f, 0xe4, 0x18, 0xec, 0xe4, 0x35, 0xe6, 0xf1, 0x73, 0xc6, 0x42, 0xa7, 0x29,
	0xa8, 0xbb, 0x62, 0xb0, 0x64, 0x21, 0xbd, 0x86, 0xfe, 0x1d, 0x43, 0x9f, 0x63, 0x6e, 0xe1, 0xe1,
	0x47, 0x86, 0x29, 0x27, 0xe7, 0xd0, 0xf2, 0xc5, 0x40, 0xb8, 0xb5, 0xa7, 0xfb, 0xae, 0x4c, 0xe3,
	0x4a, 0x9e, 0x84, 0xe9, 0x0c, 0x06, 0xe5, 0xef, 0xd3, 0x24, 0x8e, 0x52, 0x24, 0x13, 0xb0, 0xd6,
	0x62, 0x1e, 0xd4, 0x29, 0xfc, 0xe0, 0x94, 0x42, 0xef, 0x01, 0x79, 0xd9, 0xbf, 0xb2, 0x29, 0xbd,
	0x82, 0x03, 0x85, 0x23, 0x3d, 0xfe, 0x1d, 0xf2, 0x16, 0xfa, 0xcb, 0x24, 0xf8, 0xb3, 0xe4, 0x04,
	0xac, 0x4c, 0x8c, 0xeb, 0x33, 0x4a, 0x9c, 0xde, 0xc0, 0xa0, 0xac, 0xf0, 0x1b, 0x81, 0x61, 0x9a,
	0x85, 0xbc, 0x36, 0x42, 0x0e, 0xd3, 0x33, 0xe8, 0xdf, 0x63, 0x88, 0xd5, 0x08, 0xd5, 0x3d, 0x0f,
	0x61, 0x50, 0xa6, 0xe5, 0x3e, 0xd3, 0x4f, 0x13, 0xac, 0x79, 0xae, 0x4c, 0x16, 0xd0, 0x51, 0x2b,
	0x27, 0x27, 0x85, 0xa7, 0xe6, 0x92, 0xc3, 0xd3, 0x1a, 0x54, 0x2e, 0x30, 0x07, 0xbb, 0x28, 0x96,
	0x1c, 0x15, 0xdc, 0xea, 0x41, 0x86, 0x43, 0x1d, 0x24, 0x35, 0x16, 0xd0, 0x51, 0xcb, 0x51, 0x02,
	0x69, 0x5a, 0x57, 0x02, 0x69, 0x1b, 0x5d, 0x40, 0x47, 0x6d, 0x40, 0x11, 0xd3, 0xf4, 0xa7, 0x88,
	0xe9, 0x6a, 0x9b, 0xb7, 0x1f, 0x6d, 0xf7, 0x52, 0x32, 0x56, 0x2d, 0xf1, 0x5f, 0x5d, 0x7c, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x07, 0xfb, 0x7a, 0x72, 0x68, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	CreateAnimal(ctx context.Context, in *CreateAnimalRequest, opts ...grpc.CallOption) (*CreateAnimalResponse, error)
	GetAnimal(ctx context.Context, in *GetAnimalRequest, opts ...grpc.CallOption) (*GetAnimalResponse, error)
	UpdateAnimal(ctx context.Context, in *UpdateAnimalRequest, opts ...grpc.CallOption) (*UpdateAnimalResponse, error)
	DeleteAnimal(ctx context.Context, in *DeleteAnimalRequest, opts ...grpc.CallOption) (*DeleteAnimalResponse, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) CreateAnimal(ctx context.Context, in *CreateAnimalRequest, opts ...grpc.CallOption) (*CreateAnimalResponse, error) {
	out := new(CreateAnimalResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/CreateAnimal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) GetAnimal(ctx context.Context, in *GetAnimalRequest, opts ...grpc.CallOption) (*GetAnimalResponse, error) {
	out := new(GetAnimalResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/GetAnimal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) UpdateAnimal(ctx context.Context, in *UpdateAnimalRequest, opts ...grpc.CallOption) (*UpdateAnimalResponse, error) {
	out := new(UpdateAnimalResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/UpdateAnimal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) DeleteAnimal(ctx context.Context, in *DeleteAnimalRequest, opts ...grpc.CallOption) (*DeleteAnimalResponse, error) {
	out := new(DeleteAnimalResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/DeleteAnimal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	CreateAnimal(context.Context, *CreateAnimalRequest) (*CreateAnimalResponse, error)
	GetAnimal(context.Context, *GetAnimalRequest) (*GetAnimalResponse, error)
	UpdateAnimal(context.Context, *UpdateAnimalRequest) (*UpdateAnimalResponse, error)
	DeleteAnimal(context.Context, *DeleteAnimalRequest) (*DeleteAnimalResponse, error)
}

// UnimplementedBackendServer can be embedded to have forward compatible implementations.
type UnimplementedBackendServer struct {
}

func (*UnimplementedBackendServer) CreateAnimal(ctx context.Context, req *CreateAnimalRequest) (*CreateAnimalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnimal not implemented")
}
func (*UnimplementedBackendServer) GetAnimal(ctx context.Context, req *GetAnimalRequest) (*GetAnimalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnimal not implemented")
}
func (*UnimplementedBackendServer) UpdateAnimal(ctx context.Context, req *UpdateAnimalRequest) (*UpdateAnimalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAnimal not implemented")
}
func (*UnimplementedBackendServer) DeleteAnimal(ctx context.Context, req *DeleteAnimalRequest) (*DeleteAnimalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAnimal not implemented")
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_CreateAnimal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAnimalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).CreateAnimal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/CreateAnimal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).CreateAnimal(ctx, req.(*CreateAnimalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_GetAnimal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnimalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).GetAnimal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/GetAnimal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).GetAnimal(ctx, req.(*GetAnimalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_UpdateAnimal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAnimalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).UpdateAnimal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/UpdateAnimal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).UpdateAnimal(ctx, req.(*UpdateAnimalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_DeleteAnimal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAnimalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).DeleteAnimal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/DeleteAnimal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).DeleteAnimal(ctx, req.(*DeleteAnimalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAnimal",
			Handler:    _Backend_CreateAnimal_Handler,
		},
		{
			MethodName: "GetAnimal",
			Handler:    _Backend_GetAnimal_Handler,
		},
		{
			MethodName: "UpdateAnimal",
			Handler:    _Backend_UpdateAnimal_Handler,
		},
		{
			MethodName: "DeleteAnimal",
			Handler:    _Backend_DeleteAnimal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "project.proto",
}
